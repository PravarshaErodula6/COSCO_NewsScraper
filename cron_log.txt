/bin/bash: /Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: Operation not permitted
/bin/bash: /Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: Operation not permitted
/bin/bash: /Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: Operation not permitted
/bin/bash: /Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: Operation not permitted
/bin/bash: /Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: Operation not permitted
/Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: line 5: papermill: command not found
/Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: line 5: papermill: command not found
/Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: line 5: papermill: command not found
/Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: line 5: papermill: command not found
/Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: line 5: papermill: command not found
/Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: line 5: papermill: command not found
/Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: line 7: papermill: command not found
/Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: line 7: papermill: command not found
/Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: line 7: papermill: command not found
/Users/pravarshaerodula/Desktop/COSCO/run_notebook.sh: line 7: papermill: command not found
Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:35,  2.72s/cell]Executing:   3%|▎         | 2/58 [00:04<01:54,  2.04s/cell]Executing:   5%|▌         | 3/58 [00:06<01:46,  1.93s/cell]Executing:   7%|▋         | 4/58 [00:25<07:52,  8.75s/cell]Executing:   9%|▊         | 5/58 [00:33<07:35,  8.59s/cell]Executing:  10%|█         | 6/58 [00:35<05:24,  6.25s/cell]Executing:  10%|█         | 6/58 [00:35<05:11,  5.99s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x1185fd910>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=57418): Max retries exceeded with url: /session/d2ef7df9f21de4f4dbccfb16c361eab0/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x1185fd910>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:17,  2.42s/cell]Executing:   3%|▎         | 2/58 [00:03<01:37,  1.74s/cell]Executing:   5%|▌         | 3/58 [00:04<01:10,  1.29s/cell]Executing:   7%|▋         | 4/58 [00:15<04:38,  5.16s/cell]Executing:   9%|▊         | 5/58 [00:23<05:20,  6.04s/cell]Executing:  10%|█         | 6/58 [00:24<03:47,  4.38s/cell]Executing:  10%|█         | 6/58 [00:24<03:35,  4.15s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x106326d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=57611): Max retries exceeded with url: /session/20706627dca851dafb8261c44f128a02/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x106326d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:21,  2.48s/cell]Executing:   3%|▎         | 2/58 [00:03<01:40,  1.79s/cell]Executing:   5%|▌         | 3/58 [00:04<01:11,  1.30s/cell]Executing:   7%|▋         | 4/58 [00:14<04:08,  4.61s/cell]Executing:   9%|▊         | 5/58 [00:20<04:36,  5.21s/cell]Executing:  10%|█         | 6/58 [00:21<03:20,  3.86s/cell]Executing:  10%|█         | 6/58 [00:22<03:18,  3.82s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x109f62d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=57796): Max retries exceeded with url: /session/41c9e5828c1a726904ff9290e5f1ce14/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x109f62d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:11,  2.31s/cell]Executing:   3%|▎         | 2/58 [00:03<01:36,  1.73s/cell]Executing:   5%|▌         | 3/58 [00:04<01:06,  1.21s/cell]Executing:   7%|▋         | 4/58 [00:13<03:57,  4.40s/cell]Executing:   9%|▊         | 5/58 [00:19<04:21,  4.94s/cell]Executing:  10%|█         | 6/58 [00:20<03:10,  3.66s/cell]Executing:  10%|█         | 6/58 [00:21<03:08,  3.62s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x106a2ad50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=57997): Max retries exceeded with url: /session/2c4d7736bc97d1cfcb88f50e2f8ff871/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x106a2ad50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:09,  2.27s/cell]Executing:   3%|▎         | 2/58 [00:03<01:33,  1.67s/cell]Executing:   5%|▌         | 3/58 [00:04<01:03,  1.15s/cell]Executing:   7%|▋         | 4/58 [00:13<03:50,  4.27s/cell]Executing:   9%|▊         | 5/58 [00:18<04:07,  4.67s/cell]Executing:  10%|█         | 6/58 [00:19<03:00,  3.46s/cell]Executing:  10%|█         | 6/58 [00:20<02:55,  3.37s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x112f62d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=58193): Max retries exceeded with url: /session/aa7d40a16360375e452359f41a214cd4/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x112f62d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:09,  2.27s/cell]Executing:   3%|▎         | 2/58 [00:03<01:36,  1.73s/cell]Executing:   5%|▌         | 3/58 [00:04<01:05,  1.20s/cell]Executing:   7%|▋         | 4/58 [00:13<03:58,  4.42s/cell]Executing:   9%|▊         | 5/58 [00:19<04:16,  4.84s/cell]Executing:  10%|█         | 6/58 [00:20<03:04,  3.55s/cell]Executing:  10%|█         | 6/58 [00:20<02:59,  3.45s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10bc62d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=58375): Max retries exceeded with url: /session/601242e3f483f0b1e31fc931abca2217/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10bc62d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<01:58,  2.08s/cell]Executing:   3%|▎         | 2/58 [00:03<01:35,  1.71s/cell]Executing:   5%|▌         | 3/58 [00:04<01:06,  1.20s/cell]Executing:   7%|▋         | 4/58 [00:14<04:23,  4.87s/cell]Executing:   9%|▊         | 5/58 [00:20<04:32,  5.15s/cell]Executing:  10%|█         | 6/58 [00:21<03:18,  3.81s/cell]Executing:  10%|█         | 6/58 [00:22<03:16,  3.78s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10b0eed50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=58703): Max retries exceeded with url: /session/a05f0a12317940715707d86ec457969b/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10b0eed50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:16,  2.40s/cell]Executing:   3%|▎         | 2/58 [00:03<01:38,  1.76s/cell]Executing:   5%|▌         | 3/58 [00:04<01:08,  1.24s/cell]Executing:   7%|▋         | 4/58 [00:13<04:05,  4.54s/cell]Executing:   9%|▊         | 5/58 [00:20<04:33,  5.17s/cell]Executing:  10%|█         | 6/58 [00:21<03:18,  3.81s/cell]Executing:  10%|█         | 6/58 [00:22<03:15,  3.75s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x108fc6d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=58897): Max retries exceeded with url: /session/0d1710c9d04a3a8142438a994fae3885/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x108fc6d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:07,  2.23s/cell]Executing:   3%|▎         | 2/58 [00:03<01:34,  1.69s/cell]Executing:   5%|▌         | 3/58 [00:04<01:04,  1.18s/cell]Executing:   7%|▋         | 4/58 [00:13<03:51,  4.29s/cell]Executing:   9%|▊         | 5/58 [00:18<04:04,  4.61s/cell]Executing:  10%|█         | 6/58 [00:19<03:00,  3.48s/cell]Executing:  10%|█         | 6/58 [00:20<03:00,  3.48s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x106f92d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=59093): Max retries exceeded with url: /session/fce6b5a219d79195d2d461dbbbbadc68/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x106f92d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:13,  2.34s/cell]Executing:   3%|▎         | 2/58 [00:03<01:34,  1.70s/cell]Executing:   5%|▌         | 3/58 [00:04<01:06,  1.22s/cell]Executing:   7%|▋         | 4/58 [00:14<04:14,  4.72s/cell]Executing:   9%|▊         | 5/58 [00:20<04:33,  5.15s/cell]Executing:  10%|█         | 6/58 [00:21<03:18,  3.82s/cell]Executing:  10%|█         | 6/58 [00:22<03:13,  3.71s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x1065ead50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=59289): Max retries exceeded with url: /session/65071f928c9bb3b32ca233045ad69111/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x1065ead50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:27,  2.58s/cell]Executing:   3%|▎         | 2/58 [00:03<01:46,  1.90s/cell]Executing:   5%|▌         | 3/58 [00:04<01:11,  1.30s/cell]Executing:   7%|▋         | 4/58 [00:13<03:53,  4.32s/cell]Executing:   9%|▊         | 5/58 [00:19<04:14,  4.80s/cell]Executing:  10%|█         | 6/58 [00:20<03:03,  3.53s/cell]Executing:  10%|█         | 6/58 [00:20<03:00,  3.48s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x107d62d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=59477): Max retries exceeded with url: /session/6cf5a829956584f6cbc22aa001cafa0a/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x107d62d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:12,  2.33s/cell]Executing:   3%|▎         | 2/58 [00:03<01:35,  1.71s/cell]Executing:   5%|▌         | 3/58 [00:04<01:06,  1.20s/cell]Executing:   7%|▋         | 4/58 [00:14<04:11,  4.66s/cell]Executing:   9%|▊         | 5/58 [00:20<04:34,  5.19s/cell]Executing:  10%|█         | 6/58 [00:21<03:19,  3.83s/cell]Executing:  10%|█         | 6/58 [00:22<03:16,  3.79s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x110062d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=59660): Max retries exceeded with url: /session/9be36b4f15baaf9b8a32a2c64f67d3a1/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x110062d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:11,  2.32s/cell]Executing:   3%|▎         | 2/58 [00:03<01:37,  1.74s/cell]Executing:   5%|▌         | 3/58 [00:04<01:06,  1.21s/cell]Executing:   7%|▋         | 4/58 [00:12<03:46,  4.19s/cell]Executing:   9%|▊         | 5/58 [00:19<04:21,  4.93s/cell]Executing:  10%|█         | 6/58 [00:20<03:10,  3.67s/cell]Executing:  10%|█         | 6/58 [00:21<03:06,  3.59s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10ab2ad50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=59860): Max retries exceeded with url: /session/15e107bbfc8392d8e550384fca9d3a4f/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ab2ad50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:15,  2.38s/cell]Executing:   3%|▎         | 2/58 [00:03<01:37,  1.74s/cell]Executing:   5%|▌         | 3/58 [00:04<01:07,  1.22s/cell]Executing:   7%|▋         | 4/58 [00:13<04:00,  4.46s/cell]Executing:   9%|▊         | 5/58 [00:19<04:27,  5.05s/cell]Executing:  10%|█         | 6/58 [00:21<03:14,  3.75s/cell]Executing:  10%|█         | 6/58 [00:22<03:11,  3.69s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x119662d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=60057): Max retries exceeded with url: /session/b7c9172c1dc203ba03ddaeb255e070d6/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x119662d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:10,  2.28s/cell]Executing:   3%|▎         | 2/58 [00:03<01:35,  1.71s/cell]Executing:   5%|▌         | 3/58 [00:04<01:06,  1.20s/cell]Executing:   7%|▋         | 4/58 [00:13<03:58,  4.42s/cell]Executing:   9%|▊         | 5/58 [00:19<04:31,  5.12s/cell]Executing:  10%|█         | 6/58 [00:21<03:24,  3.93s/cell]Executing:  10%|█         | 6/58 [00:22<03:13,  3.73s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x113d62d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=60256): Max retries exceeded with url: /session/02200a7d61173c5b4a55a124ac3cd36a/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x113d62d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:12,  2.33s/cell]Executing:   3%|▎         | 2/58 [00:03<01:37,  1.74s/cell]Executing:   5%|▌         | 3/58 [00:04<01:06,  1.21s/cell]Executing:   7%|▋         | 4/58 [00:14<04:08,  4.60s/cell]Executing:   9%|▊         | 5/58 [00:18<04:09,  4.70s/cell]Executing:   9%|▊         | 5/58 [00:19<03:30,  3.97s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [5]":
---------------------------------------------------------------------------
InvalidSessionIdException                 Traceback (most recent call last)
Cell In[5], line 21
     19 # Open a test website
     20 url = "https://www.upstreamonline.com/"
---> 21 driver.get(url)
     23 print("Website loaded successfully!")
     25 # Close the driver

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:454, in WebDriver.get(self, url)
    436 def get(self, url: str) -> None:
    437     """Navigate the browser to the specified URL in the current window or
    438     tab.
    439 
   (...)
    452     >>> driver.get("https://example.com")
    453     """
--> 454     self.execute(Command.GET, {"url": url})

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:429, in WebDriver.execute(self, driver_command, params)
    427 response = self.command_executor.execute(driver_command, params)
    428 if response:
--> 429     self.error_handler.check_response(response)
    430     response["value"] = self._unwrap_value(response.get("value", None))
    431     return response

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232, in ErrorHandler.check_response(self, response)
    230         alert_text = value["alert"].get("text")
    231     raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
--> 232 raise exception_class(message, screen, stacktrace)

InvalidSessionIdException: Message: invalid session id: session deleted as the browser has closed the connection
from disconnected: Unable to receive message from renderer
  (Session info: chrome=135.0.7049.42)
Stacktrace:
0   chromedriver                        0x0000000100ea6dec cxxbridge1$str$ptr + 2817040
1   chromedriver                        0x0000000100e9f088 cxxbridge1$str$ptr + 2784940
2   chromedriver                        0x00000001009e68d8 cxxbridge1$string$len + 93028
3   chromedriver                        0x00000001009d0d9c cxxbridge1$string$len + 4136
4   chromedriver                        0x00000001009d0b14 cxxbridge1$string$len + 3488
5   chromedriver                        0x00000001009cfb34 chromedriver + 195380
6   chromedriver                        0x00000001009f27dc cxxbridge1$string$len + 141928
7   chromedriver                        0x0000000100a6ea9c cxxbridge1$string$len + 650536
8   chromedriver                        0x0000000100a21a80 cxxbridge1$string$len + 335116
9   chromedriver                        0x0000000100e6bc74 cxxbridge1$str$ptr + 2575000
10  chromedriver                        0x0000000100e6ef40 cxxbridge1$str$ptr + 2588004
11  chromedriver                        0x0000000100e4b9fc cxxbridge1$str$ptr + 2443296
12  chromedriver                        0x0000000100e6f7bc cxxbridge1$str$ptr + 2590176
13  chromedriver                        0x0000000100e3caf0 cxxbridge1$str$ptr + 2382100
14  chromedriver                        0x0000000100e8f9a0 cxxbridge1$str$ptr + 2721732
15  chromedriver                        0x0000000100e8fb2c cxxbridge1$str$ptr + 2722128
16  chromedriver                        0x0000000100e9ecd4 cxxbridge1$str$ptr + 2783992
17  libsystem_pthread.dylib             0x00000001978ff2e4 _pthread_start + 136
18  libsystem_pthread.dylib             0x00000001978fa0fc thread_start + 8


Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:15,  2.38s/cell]Executing:   3%|▎         | 2/58 [00:03<01:36,  1.72s/cell]Executing:   5%|▌         | 3/58 [00:04<01:10,  1.29s/cell]Executing:   7%|▋         | 4/58 [00:15<04:32,  5.05s/cell]Executing:   9%|▊         | 5/58 [00:20<04:35,  5.19s/cell]Executing:  10%|█         | 6/58 [00:21<03:17,  3.80s/cell]Executing:  10%|█         | 6/58 [00:22<03:15,  3.77s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10adcad50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=60634): Max retries exceeded with url: /session/a710c08d24ad1de25de32bc5bd5be0cc/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10adcad50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:17,  2.41s/cell]Executing:   3%|▎         | 2/58 [00:03<01:40,  1.79s/cell]Executing:   5%|▌         | 3/58 [00:04<01:08,  1.24s/cell]Executing:   7%|▋         | 4/58 [00:14<04:08,  4.60s/cell]Executing:   9%|▊         | 5/58 [00:20<04:31,  5.12s/cell]Executing:  10%|█         | 6/58 [00:21<03:16,  3.78s/cell]Executing:  10%|█         | 6/58 [00:22<03:14,  3.74s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10624ad50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=60824): Max retries exceeded with url: /session/9f36a1d42db032ed45d7d03fc342f57d/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10624ad50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:07,  2.23s/cell]Executing:   3%|▎         | 2/58 [00:03<01:35,  1.71s/cell]Executing:   5%|▌         | 3/58 [00:04<01:06,  1.21s/cell]Executing:   7%|▋         | 4/58 [00:13<03:57,  4.40s/cell]Executing:   9%|▊         | 5/58 [00:19<04:30,  5.10s/cell]Executing:  10%|█         | 6/58 [00:21<03:16,  3.79s/cell]Executing:  10%|█         | 6/58 [00:22<03:12,  3.70s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x11ac62d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=61023): Max retries exceeded with url: /session/f09753954657331706f93d805e5a9227/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x11ac62d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:16,  2.40s/cell]Executing:   3%|▎         | 2/58 [00:03<01:38,  1.76s/cell]Executing:   5%|▌         | 3/58 [00:04<01:07,  1.23s/cell]Executing:   7%|▋         | 4/58 [00:14<04:07,  4.59s/cell]Executing:   9%|▊         | 5/58 [00:21<04:49,  5.47s/cell]Executing:  10%|█         | 6/58 [00:22<03:31,  4.07s/cell]Executing:  10%|█         | 6/58 [00:23<03:24,  3.94s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10ab1ad50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=61222): Max retries exceeded with url: /session/5ff977a6a5f507b08b44e2d8879bfcc6/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ab1ad50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:23,  2.51s/cell]Executing:   3%|▎         | 2/58 [00:04<01:48,  1.93s/cell]Executing:   5%|▌         | 3/58 [00:04<01:16,  1.38s/cell]Executing:   7%|▋         | 4/58 [00:14<04:21,  4.83s/cell]Executing:   9%|▊         | 5/58 [00:20<04:34,  5.18s/cell]Executing:  10%|█         | 6/58 [00:21<03:18,  3.82s/cell]Executing:  10%|█         | 6/58 [00:23<03:20,  3.85s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x119662d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=61421): Max retries exceeded with url: /session/ac33f0aa6e6cf9ff211a8e8560431d56/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x119662d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:16,  2.39s/cell]Executing:   3%|▎         | 2/58 [00:03<01:39,  1.78s/cell]Executing:   5%|▌         | 3/58 [00:04<01:08,  1.24s/cell]Executing:   7%|▋         | 4/58 [00:14<04:07,  4.58s/cell]Executing:   9%|▊         | 5/58 [00:20<04:29,  5.08s/cell]Executing:  10%|█         | 6/58 [00:21<03:15,  3.77s/cell]Executing:  10%|█         | 6/58 [00:22<03:13,  3.73s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x106956d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=61622): Max retries exceeded with url: /session/4adf2b80ef20e4290287606f65dad451/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x106956d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:10,  2.29s/cell]Executing:   3%|▎         | 2/58 [00:03<01:36,  1.72s/cell]Executing:   5%|▌         | 3/58 [00:04<01:05,  1.20s/cell]Executing:   7%|▋         | 4/58 [00:13<03:51,  4.28s/cell]Executing:   9%|▊         | 5/58 [00:19<04:23,  4.98s/cell]Executing:  10%|█         | 6/58 [00:20<03:12,  3.69s/cell]Executing:  10%|█         | 6/58 [00:21<03:08,  3.62s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x110362d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=61820): Max retries exceeded with url: /session/a488308783cc8056a53390764b1bf12e/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x110362d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:14,  2.36s/cell]Executing:   3%|▎         | 2/58 [00:03<01:37,  1.74s/cell]Executing:   5%|▌         | 3/58 [00:04<01:07,  1.22s/cell]Executing:   7%|▋         | 4/58 [00:13<03:51,  4.28s/cell]Executing:   9%|▊         | 5/58 [00:18<04:13,  4.78s/cell]Executing:  10%|█         | 6/58 [00:20<03:05,  3.57s/cell]Executing:  10%|█         | 6/58 [00:21<03:04,  3.55s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10ab4ed50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=62015): Max retries exceeded with url: /session/e106c2bd1dcc014c22ef882f1b41ae6e/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ab4ed50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:11,  2.30s/cell]Executing:   3%|▎         | 2/58 [00:03<01:36,  1.72s/cell]Executing:   5%|▌         | 3/58 [00:04<01:06,  1.20s/cell]Executing:   7%|▋         | 4/58 [00:13<03:53,  4.32s/cell]Executing:   9%|▊         | 5/58 [00:19<04:18,  4.87s/cell]Executing:  10%|█         | 6/58 [00:20<03:08,  3.62s/cell]Executing:  10%|█         | 6/58 [00:21<03:07,  3.60s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10b036d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=62210): Max retries exceeded with url: /session/71296a9202fe353924f50d8ad8b6f321/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10b036d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:14,  2.36s/cell]Executing:   3%|▎         | 2/58 [00:03<01:37,  1.74s/cell]Executing:   5%|▌         | 3/58 [00:04<01:07,  1.22s/cell]Executing:   7%|▋         | 4/58 [00:14<04:11,  4.66s/cell]Executing:   9%|▊         | 5/58 [00:21<04:50,  5.49s/cell]Executing:  10%|█         | 6/58 [00:22<03:31,  4.06s/cell]Executing:  10%|█         | 6/58 [00:23<03:25,  3.95s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10687ed50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=62415): Max retries exceeded with url: /session/7f5452e6f4065898d3d9776080ae8749/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10687ed50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:16,  2.39s/cell]Executing:   3%|▎         | 2/58 [00:03<01:33,  1.67s/cell]Executing:   5%|▌         | 3/58 [00:04<01:08,  1.25s/cell]Executing:   7%|▋         | 4/58 [00:15<04:38,  5.16s/cell]Executing:   9%|▊         | 5/58 [00:21<04:54,  5.56s/cell]Executing:  10%|█         | 6/58 [00:22<03:30,  4.05s/cell]Executing:  10%|█         | 6/58 [00:23<03:22,  3.90s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x1085e2d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=62616): Max retries exceeded with url: /session/354bf99f72a227cb42fe8076520b0e46/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x1085e2d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:15,  2.37s/cell]Executing:   3%|▎         | 2/58 [00:03<01:37,  1.74s/cell]Executing:   5%|▌         | 3/58 [00:04<01:05,  1.20s/cell]Executing:   7%|▋         | 4/58 [00:13<04:01,  4.47s/cell]Executing:   9%|▊         | 5/58 [00:19<04:23,  4.98s/cell]Executing:  10%|█         | 6/58 [00:20<03:10,  3.66s/cell]Executing:  10%|█         | 6/58 [00:21<03:05,  3.57s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x114362d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=62949): Max retries exceeded with url: /session/c7ad9482c7340e466e24a61093ec2e77/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x114362d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:15,  2.38s/cell]Executing:   3%|▎         | 2/58 [00:03<01:38,  1.76s/cell]Executing:   5%|▌         | 3/58 [00:04<01:07,  1.23s/cell]Executing:   7%|▋         | 4/58 [00:14<04:07,  4.58s/cell]Executing:   9%|▊         | 5/58 [00:20<04:37,  5.24s/cell]Executing:  10%|█         | 6/58 [00:21<03:21,  3.87s/cell]Executing:  10%|█         | 6/58 [00:22<03:17,  3.80s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10aa7ad50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=63133): Max retries exceeded with url: /session/c0a3190826c94c7a1c1982635df76526/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10aa7ad50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:16,  2.40s/cell]Executing:   3%|▎         | 2/58 [00:03<01:39,  1.77s/cell]Executing:   5%|▌         | 3/58 [00:04<01:07,  1.23s/cell]Executing:   7%|▋         | 4/58 [00:13<04:05,  4.54s/cell]Executing:   9%|▊         | 5/58 [00:19<04:29,  5.08s/cell]Executing:  10%|█         | 6/58 [00:21<03:16,  3.77s/cell]Executing:  10%|█         | 6/58 [00:22<03:13,  3.72s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x123e62d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=63327): Max retries exceeded with url: /session/4837fb66b4673617c0f42e729747f669/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x123e62d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Executing:   0%|          | 0/58 [00:00<?, ?cell/s]Executing notebook with kernel: myenv
Executing:   2%|▏         | 1/58 [00:02<02:12,  2.32s/cell]Executing:   3%|▎         | 2/58 [00:03<01:34,  1.69s/cell]Executing:   5%|▌         | 3/58 [00:04<01:03,  1.15s/cell]Executing:   7%|▋         | 4/58 [00:13<03:56,  4.37s/cell]Executing:   9%|▊         | 5/58 [00:19<04:29,  5.08s/cell]Executing:  10%|█         | 6/58 [00:21<03:25,  3.95s/cell]Executing:  10%|█         | 6/58 [00:22<03:15,  3.75s/cell]
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x107862d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=63524): Max retries exceeded with url: /session/bff69d477b2c63500ff0dab7f9e4b832/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x107862d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Working directory: /Users/pravarshaerodula/Desktop/COSCO
Executing notebook with kernel: myenv
Executing Cell 1---------------------------------------
Package                   Version

------------------------- --------------
ansicolors                1.1.8
anyio                     4.8.0
appnope                   0.1.4
argon2-cffi               23.1.0
argon2-cffi-bindings      21.2.0
arrow                     1.3.0
asttokens                 3.0.0
async-lru                 2.0.4
attrs                     25.1.0
babel                     2.17.0
beautifulsoup4            4.13.3
bleach                    6.2.0
certifi                   2025.1.31
cffi                      1.17.1
charset-normalizer        3.4.1
click                     8.1.8
comm                      0.2.2
debugpy                   1.8.12
decorator                 5.1.1
defusedxml                0.7.1
entrypoints               0.4
executing                 2.2.0
fastjsonschema            2.21.1
feedparser                6.0.11
filelock                  3.17.0
fqdn                      1.5.1
fsspec                    2025.2.0
h11                       0.14.0
httpcore                  1.0.7
httpx                     0.28.1
huggingface-hub           0.28.1
idna                      3.10
ipykernel                 6.29.5
ipython                   8.32.0
ipywidgets                8.1.5
isoduration               20.11.0
jedi                      0.19.2
Jinja2                    3.1.5
json5                     0.10.0
jsonpointer               3.0.0
jsonschema                4.23.0
jsonschema-specifications 2024.10.1
jupyter                   1.1.1
jupyter_client            8.6.3
jupyter-console           6.6.3
jupyter_core              5.7.2
jupyter-events            0.12.0
jupyter-lsp               2.2.5
jupyter_server            2.15.0
jupyter_server_terminals  0.5.3
jupyterlab                4.3.5
jupyterlab_pygments       0.3.0
jupyterlab_server         2.27.3
jupyterlab_widgets        3.0.13
MarkupSafe                3.0.2
matplotlib-inline         0.1.7
mistune                   3.1.1
mpmath                    1.3.0
nbclient                  0.10.2
nbconvert                 7.16.6
nbformat                  5.10.4
nest-asyncio              1.6.0
networkx                  3.4.2
notebook                  7.3.2
notebook_shim             0.2.4
numpy                     2.2.2
outcome                   1.3.0.post0
overrides                 7.7.0
packaging                 24.2
pandas                    2.2.3
pandocfilters             1.5.1
papermill                 2.6.0
parso                     0.8.4
pexpect                   4.9.0
pillow                    11.1.0
pip                       25.0.1
platformdirs              4.3.6
prometheus_client         0.21.1
prompt_toolkit            3.0.50
psutil                    6.1.1
ptyprocess                0.7.0
pure_eval                 0.2.3
pycparser                 2.22
Pygments                  2.19.1
PySocks                   1.7.1
python-dateutil           2.9.0.post0
python-dotenv             1.0.1
python-json-logger        3.2.1
pytz                      2025.1
PyYAML                    6.0.2
pyzmq                     26.2.1
referencing               0.36.2
regex                     2024.11.6
requests                  2.32.3
rfc3339-validator         0.1.4
rfc3986-validator         0.1.1
rpds-py                   0.22.3
safetensors               0.5.2
scapy                     2.6.1
selenium                  4.28.1
Send2Trash                1.8.3
setuptools                75.8.0
sgmllib3k                 1.0.0
six                       1.17.0
sniffio                   1.3.1
sortedcontainers          2.4.0
soupsieve                 2.6
stack-data                0.6.3
sympy                     1.13.1
tenacity                  9.1.2
terminado                 0.18.1
tinycss2                  1.4.0
tokenizers                0.21.0
torch                     2.6.0
torchaudio                2.6.0
torchvision               0.21.0
tornado                   6.4.2
tqdm                      4.67.1
traitlets                 5.14.3
transformers              4.49.0
trio                      0.28.0
trio-websocket            0.11.1
types-python-dateutil     2.9.0.20241206
typing_extensions         4.12.2
tzdata                    2025.1
undetected-chromedriver   3.5.5
uri-template              1.3.0
urllib3                   2.3.0
wcwidth                   0.2.13
webcolors                 24.11.1
webdriver-manager         4.0.2
webencodings              0.5.1
websocket-client          1.8.0
websockets                15.0.1
widgetsnbextension        4.0.13
wsproto                   1.2.0

Note: you may need to restart the kernel to use updated packages.

Ending Cell 1------------------------------------------
Executing Cell 2---------------------------------------
Requirement already satisfied: selenium in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (4.28.1)

Requirement already satisfied: webdriver-manager in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (4.0.2)
Requirement already satisfied: pandas in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (2.2.3)
Requirement already satisfied: urllib3<3,>=1.26 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from urllib3[socks]<3,>=1.26->selenium) (2.3.0)
Requirement already satisfied: trio~=0.17 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (0.28.0)
Requirement already satisfied: trio-websocket~=0.9 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (0.11.1)
Requirement already satisfied: certifi>=2021.10.8 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (2025.1.31)
Requirement already satisfied: typing_extensions~=4.9 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (4.12.2)
Requirement already satisfied: websocket-client~=1.8 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (1.8.0)
Requirement already satisfied: requests in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from webdriver-manager) (2.32.3)
Requirement already satisfied: python-dotenv in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from webdriver-manager) (1.0.1)
Requirement already satisfied: packaging in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from webdriver-manager) (24.2)
Requirement already satisfied: numpy>=1.26.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2.2.2)
Requirement already satisfied: python-dateutil>=2.8.2 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2.9.0.post0)
Requirement already satisfied: pytz>=2020.1 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2025.1)
Requirement already satisfied: tzdata>=2022.7 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2025.1)
Requirement already satisfied: six>=1.5 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)
Requirement already satisfied: attrs>=23.2.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (25.1.0)
Requirement already satisfied: sortedcontainers in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (2.4.0)
Requirement already satisfied: idna in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (3.10)
Requirement already satisfied: outcome in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (1.3.0.post0)
Requirement already satisfied: sniffio>=1.3.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (1.3.1)
Requirement already satisfied: wsproto>=0.14 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio-websocket~=0.9->selenium) (1.2.0)
Requirement already satisfied: pysocks!=1.5.7,<2.0,>=1.5.6 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from urllib3[socks]<3,>=1.26->selenium) (1.7.1)
Requirement already satisfied: charset-normalizer<4,>=2 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from requests->webdriver-manager) (3.4.1)

Requirement already satisfied: h11<1,>=0.9.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from wsproto>=0.14->trio-websocket~=0.9->selenium) (0.14.0)

Note: you may need to restart the kernel to use updated packages.

Ending Cell 2------------------------------------------
Executing Cell 3---------------------------------------
Selenium and required packages are installed successfully!

Ending Cell 3------------------------------------------
Executing Cell 4---------------------------------------
Website loaded successfully!

Ending Cell 4------------------------------------------
Executing Cell 5---------------------------------------
Website loaded successfully!

Ending Cell 5------------------------------------------
Executing Cell 6---------------------------------------
Ending Cell 6------------------------------------------
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x125b62d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=63877): Max retries exceeded with url: /session/387ed8bbc0f5d017400bd03fdd97c2ce/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x125b62d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Working directory: /Users/pravarshaerodula/Desktop/COSCO
Executing notebook with kernel: myenv
Executing Cell 1---------------------------------------
Package                   Version

------------------------- --------------
ansicolors                1.1.8
anyio                     4.8.0
appnope                   0.1.4
argon2-cffi               23.1.0
argon2-cffi-bindings      21.2.0
arrow                     1.3.0
asttokens                 3.0.0
async-lru                 2.0.4
attrs                     25.1.0
babel                     2.17.0
beautifulsoup4            4.13.3
bleach                    6.2.0
certifi                   2025.1.31
cffi                      1.17.1
charset-normalizer        3.4.1
click                     8.1.8
comm                      0.2.2
debugpy                   1.8.12
decorator                 5.1.1
defusedxml                0.7.1
entrypoints               0.4
executing                 2.2.0
fastjsonschema            2.21.1
feedparser                6.0.11
filelock                  3.17.0
fqdn                      1.5.1
fsspec                    2025.2.0
h11                       0.14.0
httpcore                  1.0.7
httpx                     0.28.1
huggingface-hub           0.28.1
idna                      3.10
ipykernel                 6.29.5
ipython                   8.32.0
ipywidgets                8.1.5
isoduration               20.11.0
jedi                      0.19.2
Jinja2                    3.1.5
json5                     0.10.0
jsonpointer               3.0.0
jsonschema                4.23.0
jsonschema-specifications 2024.10.1
jupyter                   1.1.1
jupyter_client            8.6.3
jupyter-console           6.6.3
jupyter_core              5.7.2
jupyter-events            0.12.0
jupyter-lsp               2.2.5
jupyter_server            2.15.0
jupyter_server_terminals  0.5.3
jupyterlab                4.3.5
jupyterlab_pygments       0.3.0
jupyterlab_server         2.27.3
jupyterlab_widgets        3.0.13
MarkupSafe                3.0.2
matplotlib-inline         0.1.7
mistune                   3.1.1
mpmath                    1.3.0
nbclient                  0.10.2
nbconvert                 7.16.6
nbformat                  5.10.4
nest-asyncio              1.6.0
networkx                  3.4.2
notebook                  7.3.2
notebook_shim             0.2.4
numpy                     2.2.2
outcome                   1.3.0.post0
overrides                 7.7.0
packaging                 24.2
pandas                    2.2.3
pandocfilters             1.5.1
papermill                 2.6.0
parso                     0.8.4
pexpect                   4.9.0
pillow                    11.1.0
pip                       25.0.1
platformdirs              4.3.6
prometheus_client         0.21.1
prompt_toolkit            3.0.50
psutil                    6.1.1
ptyprocess                0.7.0
pure_eval                 0.2.3
pycparser                 2.22
Pygments                  2.19.1
PySocks                   1.7.1
python-dateutil           2.9.0.post0
python-dotenv             1.0.1
python-json-logger        3.2.1
pytz                      2025.1
PyYAML                    6.0.2
pyzmq                     26.2.1
referencing               0.36.2
regex                     2024.11.6
requests                  2.32.3
rfc3339-validator         0.1.4
rfc3986-validator         0.1.1
rpds-py                   0.22.3
safetensors               0.5.2
scapy                     2.6.1
selenium                  4.28.1
Send2Trash                1.8.3
setuptools                75.8.0
sgmllib3k                 1.0.0
six                       1.17.0
sniffio                   1.3.1
sortedcontainers          2.4.0
soupsieve                 2.6
stack-data                0.6.3
sympy                     1.13.1
tenacity                  9.1.2
terminado                 0.18.1
tinycss2                  1.4.0
tokenizers                0.21.0
torch                     2.6.0
torchaudio                2.6.0
torchvision               0.21.0
tornado                   6.4.2
tqdm                      4.67.1
traitlets                 5.14.3
transformers              4.49.0
trio                      0.28.0
trio-websocket            0.11.1
types-python-dateutil     2.9.0.20241206
typing_extensions         4.12.2
tzdata                    2025.1
undetected-chromedriver   3.5.5
uri-template              1.3.0
urllib3                   2.3.0
wcwidth                   0.2.13
webcolors                 24.11.1
webdriver-manager         4.0.2
webencodings              0.5.1
websocket-client          1.8.0
websockets                15.0.1
widgetsnbextension        4.0.13
wsproto                   1.2.0

Note: you may need to restart the kernel to use updated packages.

Ending Cell 1------------------------------------------
Executing Cell 2---------------------------------------
Requirement already satisfied: selenium in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (4.28.1)

Requirement already satisfied: webdriver-manager in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (4.0.2)
Requirement already satisfied: pandas in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (2.2.3)
Requirement already satisfied: urllib3<3,>=1.26 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from urllib3[socks]<3,>=1.26->selenium) (2.3.0)
Requirement already satisfied: trio~=0.17 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (0.28.0)
Requirement already satisfied: trio-websocket~=0.9 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (0.11.1)
Requirement already satisfied: certifi>=2021.10.8 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (2025.1.31)
Requirement already satisfied: typing_extensions~=4.9 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (4.12.2)
Requirement already satisfied: websocket-client~=1.8 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (1.8.0)
Requirement already satisfied: requests in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from webdriver-manager) (2.32.3)
Requirement already satisfied: python-dotenv in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from webdriver-manager) (1.0.1)
Requirement already satisfied: packaging in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from webdriver-manager) (24.2)
Requirement already satisfied: numpy>=1.26.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2.2.2)
Requirement already satisfied: python-dateutil>=2.8.2 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2.9.0.post0)
Requirement already satisfied: pytz>=2020.1 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2025.1)
Requirement already satisfied: tzdata>=2022.7 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2025.1)
Requirement already satisfied: six>=1.5 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)
Requirement already satisfied: attrs>=23.2.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (25.1.0)
Requirement already satisfied: sortedcontainers in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (2.4.0)
Requirement already satisfied: idna in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (3.10)
Requirement already satisfied: outcome in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (1.3.0.post0)
Requirement already satisfied: sniffio>=1.3.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (1.3.1)
Requirement already satisfied: wsproto>=0.14 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio-websocket~=0.9->selenium) (1.2.0)
Requirement already satisfied: pysocks!=1.5.7,<2.0,>=1.5.6 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from urllib3[socks]<3,>=1.26->selenium) (1.7.1)
Requirement already satisfied: charset-normalizer<4,>=2 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from requests->webdriver-manager) (3.4.1)

Requirement already satisfied: h11<1,>=0.9.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from wsproto>=0.14->trio-websocket~=0.9->selenium) (0.14.0)

Note: you may need to restart the kernel to use updated packages.

Ending Cell 2------------------------------------------
Executing Cell 3---------------------------------------
Selenium and required packages are installed successfully!

Ending Cell 3------------------------------------------
Executing Cell 4---------------------------------------
Website loaded successfully!

Ending Cell 4------------------------------------------
Executing Cell 5---------------------------------------
Website loaded successfully!

Ending Cell 5------------------------------------------
Executing Cell 6---------------------------------------
Ending Cell 6------------------------------------------
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x108f62d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=64069): Max retries exceeded with url: /session/a0593bc199972c75ac1eb1c179400989/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x108f62d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Working directory: /Users/pravarshaerodula/Desktop/COSCO
Executing notebook with kernel: myenv
Executing Cell 1---------------------------------------
Package                   Version

------------------------- --------------
ansicolors                1.1.8
anyio                     4.8.0
appnope                   0.1.4
argon2-cffi               23.1.0
argon2-cffi-bindings      21.2.0
arrow                     1.3.0
asttokens                 3.0.0
async-lru                 2.0.4
attrs                     25.1.0
babel                     2.17.0
beautifulsoup4            4.13.3
bleach                    6.2.0
certifi                   2025.1.31
cffi                      1.17.1
charset-normalizer        3.4.1
click                     8.1.8
comm                      0.2.2
debugpy                   1.8.12
decorator                 5.1.1
defusedxml                0.7.1
entrypoints               0.4
executing                 2.2.0
fastjsonschema            2.21.1
feedparser                6.0.11
filelock                  3.17.0
fqdn                      1.5.1
fsspec                    2025.2.0
h11                       0.14.0
httpcore                  1.0.7
httpx                     0.28.1
huggingface-hub           0.28.1
idna                      3.10
ipykernel                 6.29.5
ipython                   8.32.0
ipywidgets                8.1.5
isoduration               20.11.0
jedi                      0.19.2
Jinja2                    3.1.5
json5                     0.10.0
jsonpointer               3.0.0
jsonschema                4.23.0
jsonschema-specifications 2024.10.1
jupyter                   1.1.1
jupyter_client            8.6.3
jupyter-console           6.6.3
jupyter_core              5.7.2
jupyter-events            0.12.0
jupyter-lsp               2.2.5
jupyter_server            2.15.0
jupyter_server_terminals  0.5.3
jupyterlab                4.3.5
jupyterlab_pygments       0.3.0
jupyterlab_server         2.27.3
jupyterlab_widgets        3.0.13
MarkupSafe                3.0.2
matplotlib-inline         0.1.7
mistune                   3.1.1
mpmath                    1.3.0
nbclient                  0.10.2
nbconvert                 7.16.6
nbformat                  5.10.4
nest-asyncio              1.6.0
networkx                  3.4.2
notebook                  7.3.2
notebook_shim             0.2.4
numpy                     2.2.2
outcome                   1.3.0.post0
overrides                 7.7.0
packaging                 24.2
pandas                    2.2.3
pandocfilters             1.5.1
papermill                 2.6.0
parso                     0.8.4
pexpect                   4.9.0
pillow                    11.1.0
pip                       25.0.1
platformdirs              4.3.6
prometheus_client         0.21.1
prompt_toolkit            3.0.50
psutil                    6.1.1
ptyprocess                0.7.0
pure_eval                 0.2.3
pycparser                 2.22
Pygments                  2.19.1
PySocks                   1.7.1
python-dateutil           2.9.0.post0
python-dotenv             1.0.1
python-json-logger        3.2.1
pytz                      2025.1
PyYAML                    6.0.2
pyzmq                     26.2.1
referencing               0.36.2
regex                     2024.11.6
requests                  2.32.3
rfc3339-validator         0.1.4
rfc3986-validator         0.1.1
rpds-py                   0.22.3
safetensors               0.5.2
scapy                     2.6.1
selenium                  4.28.1
Send2Trash                1.8.3
setuptools                75.8.0
sgmllib3k                 1.0.0
six                       1.17.0
sniffio                   1.3.1
sortedcontainers          2.4.0
soupsieve                 2.6
stack-data                0.6.3
sympy                     1.13.1
tenacity                  9.1.2
terminado                 0.18.1
tinycss2                  1.4.0
tokenizers                0.21.0
torch                     2.6.0
torchaudio                2.6.0
torchvision               0.21.0
tornado                   6.4.2
tqdm                      4.67.1
traitlets                 5.14.3
transformers              4.49.0
trio                      0.28.0
trio-websocket            0.11.1
types-python-dateutil     2.9.0.20241206
typing_extensions         4.12.2
tzdata                    2025.1
undetected-chromedriver   3.5.5
uri-template              1.3.0
urllib3                   2.3.0
wcwidth                   0.2.13
webcolors                 24.11.1
webdriver-manager         4.0.2
webencodings              0.5.1
websocket-client          1.8.0
websockets                15.0.1
widgetsnbextension        4.0.13
wsproto                   1.2.0

Note: you may need to restart the kernel to use updated packages.

Ending Cell 1------------------------------------------
Executing Cell 2---------------------------------------
Requirement already satisfied: selenium in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (4.28.1)
Requirement already satisfied: webdriver-manager in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (4.0.2)
Requirement already satisfied: pandas in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (2.2.3)
Requirement already satisfied: urllib3<3,>=1.26 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from urllib3[socks]<3,>=1.26->selenium) (2.3.0)
Requirement already satisfied: trio~=0.17 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (0.28.0)
Requirement already satisfied: trio-websocket~=0.9 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (0.11.1)
Requirement already satisfied: certifi>=2021.10.8 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (2025.1.31)
Requirement already satisfied: typing_extensions~=4.9 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (4.12.2)
Requirement already satisfied: websocket-client~=1.8 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (1.8.0)
Requirement already satisfied: requests in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from webdriver-manager) (2.32.3)
Requirement already satisfied: python-dotenv in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from webdriver-manager) (1.0.1)
Requirement already satisfied: packaging in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from webdriver-manager) (24.2)
Requirement already satisfied: numpy>=1.26.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2.2.2)
Requirement already satisfied: python-dateutil>=2.8.2 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2.9.0.post0)
Requirement already satisfied: pytz>=2020.1 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2025.1)
Requirement already satisfied: tzdata>=2022.7 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2025.1)
Requirement already satisfied: six>=1.5 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)
Requirement already satisfied: attrs>=23.2.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (25.1.0)

Requirement already satisfied: sortedcontainers in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (2.4.0)
Requirement already satisfied: idna in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (3.10)
Requirement already satisfied: outcome in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (1.3.0.post0)
Requirement already satisfied: sniffio>=1.3.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (1.3.1)
Requirement already satisfied: wsproto>=0.14 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio-websocket~=0.9->selenium) (1.2.0)
Requirement already satisfied: pysocks!=1.5.7,<2.0,>=1.5.6 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from urllib3[socks]<3,>=1.26->selenium) (1.7.1)
Requirement already satisfied: charset-normalizer<4,>=2 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from requests->webdriver-manager) (3.4.1)
Requirement already satisfied: h11<1,>=0.9.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from wsproto>=0.14->trio-websocket~=0.9->selenium) (0.14.0)

Note: you may need to restart the kernel to use updated packages.

Ending Cell 2------------------------------------------
Executing Cell 3---------------------------------------
Selenium and required packages are installed successfully!

Ending Cell 3------------------------------------------
Executing Cell 4---------------------------------------
Website loaded successfully!

Ending Cell 4------------------------------------------
Executing Cell 5---------------------------------------
Website loaded successfully!

Ending Cell 5------------------------------------------
Executing Cell 6---------------------------------------
Ending Cell 6------------------------------------------
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10b662d50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=64266): Max retries exceeded with url: /session/00b22d7bbeb1b8e48e95bb9658808a33/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10b662d50>: Failed to establish a new connection: [Errno 61] Connection refused'))

Input Notebook:  Untitled-2.ipynb
Output Notebook: output_scraper.ipynb
Working directory: /Users/pravarshaerodula/Desktop/COSCO
Executing notebook with kernel: myenv
Executing Cell 1---------------------------------------
Package                   Version
------------------------- --------------
ansicolors                1.1.8
anyio                     4.8.0
appnope                   0.1.4
argon2-cffi               23.1.0
argon2-cffi-bindings      21.2.0
arrow                     1.3.0
asttokens                 3.0.0
async-lru                 2.0.4
attrs                     25.1.0
babel                     2.17.0
beautifulsoup4            4.13.3
bleach                    6.2.0
certifi                   2025.1.31
cffi                      1.17.1
charset-normalizer        3.4.1
click                     8.1.8
comm                      0.2.2
debugpy                   1.8.12
decorator                 5.1.1
defusedxml                0.7.1
entrypoints               0.4
executing                 2.2.0
fastjsonschema            2.21.1
feedparser                6.0.11
filelock                  3.17.0
fqdn                      1.5.1
fsspec                    2025.2.0
h11                       0.14.0
httpcore                  1.0.7
httpx                     0.28.1
huggingface-hub           0.28.1
idna                      3.10
ipykernel                 6.29.5
ipython                   8.32.0
ipywidgets                8.1.5
isoduration               20.11.0
jedi                      0.19.2
Jinja2                    3.1.5
json5                     0.10.0
jsonpointer               3.0.0
jsonschema                4.23.0
jsonschema-specifications 2024.10.1
jupyter                   1.1.1
jupyter_client            8.6.3
jupyter-console           6.6.3
jupyter_core              5.7.2
jupyter-events            0.12.0
jupyter-lsp               2.2.5
jupyter_server            2.15.0
jupyter_server_terminals  0.5.3
jupyterlab                4.3.5
jupyterlab_pygments       0.3.0
jupyterlab_server         2.27.3
jupyterlab_widgets        3.0.13
MarkupSafe                3.0.2
matplotlib-inline         0.1.7
mistune                   3.1.1
mpmath                    1.3.0
nbclient                  0.10.2
nbconvert                 7.16.6
nbformat                  5.10.4
nest-asyncio              1.6.0
networkx                  3.4.2
notebook                  7.3.2
notebook_shim             0.2.4
numpy                     2.2.2
outcome                   1.3.0.post0
overrides                 7.7.0
packaging                 24.2
pandas                    2.2.3
pandocfilters             1.5.1
papermill                 2.6.0
parso                     0.8.4
pexpect                   4.9.0
pillow                    11.1.0
pip                       25.0.1
platformdirs              4.3.6
prometheus_client         0.21.1
prompt_toolkit            3.0.50
psutil                    6.1.1
ptyprocess                0.7.0
pure_eval                 0.2.3
pycparser                 2.22
Pygments                  2.19.1
PySocks                   1.7.1
python-dateutil           2.9.0.post0
python-dotenv             1.0.1
python-json-logger        3.2.1
pytz                      2025.1
PyYAML                    6.0.2
pyzmq                     26.2.1
referencing               0.36.2
regex                     2024.11.6
requests                  2.32.3
rfc3339-validator         0.1.4
rfc3986-validator         0.1.1
rpds-py                   0.22.3
safetensors               0.5.2
scapy                     2.6.1
selenium                  4.28.1
Send2Trash                1.8.3
setuptools                75.8.0
sgmllib3k                 1.0.0
six                       1.17.0
sniffio                   1.3.1
sortedcontainers          2.4.0
soupsieve                 2.6
stack-data                0.6.3
sympy                     1.13.1
tenacity                  9.1.2
terminado                 0.18.1
tinycss2                  1.4.0
tokenizers                0.21.0
torch                     2.6.0
torchaudio                2.6.0
torchvision               0.21.0
tornado                   6.4.2
tqdm                      4.67.1
traitlets                 5.14.3
transformers              4.49.0
trio                      0.28.0
trio-websocket            0.11.1
types-python-dateutil     2.9.0.20241206
typing_extensions         4.12.2
tzdata                    2025.1
undetected-chromedriver   3.5.5
uri-template              1.3.0
urllib3                   2.3.0
wcwidth                   0.2.13
webcolors                 24.11.1
webdriver-manager         4.0.2
webencodings              0.5.1
websocket-client          1.8.0
websockets                15.0.1
widgetsnbextension        4.0.13
wsproto                   1.2.0

Note: you may need to restart the kernel to use updated packages.

Ending Cell 1------------------------------------------
Executing Cell 2---------------------------------------
Requirement already satisfied: selenium in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (4.28.1)

Requirement already satisfied: webdriver-manager in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (4.0.2)
Requirement already satisfied: pandas in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (2.2.3)
Requirement already satisfied: urllib3<3,>=1.26 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from urllib3[socks]<3,>=1.26->selenium) (2.3.0)
Requirement already satisfied: trio~=0.17 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (0.28.0)
Requirement already satisfied: trio-websocket~=0.9 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (0.11.1)
Requirement already satisfied: certifi>=2021.10.8 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (2025.1.31)
Requirement already satisfied: typing_extensions~=4.9 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (4.12.2)
Requirement already satisfied: websocket-client~=1.8 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from selenium) (1.8.0)
Requirement already satisfied: requests in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from webdriver-manager) (2.32.3)
Requirement already satisfied: python-dotenv in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from webdriver-manager) (1.0.1)
Requirement already satisfied: packaging in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from webdriver-manager) (24.2)
Requirement already satisfied: numpy>=1.26.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2.2.2)
Requirement already satisfied: python-dateutil>=2.8.2 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2.9.0.post0)
Requirement already satisfied: pytz>=2020.1 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2025.1)
Requirement already satisfied: tzdata>=2022.7 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from pandas) (2025.1)
Requirement already satisfied: six>=1.5 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from python-dateutil>=2.8.2->pandas) (1.17.0)
Requirement already satisfied: attrs>=23.2.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (25.1.0)
Requirement already satisfied: sortedcontainers in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (2.4.0)
Requirement already satisfied: idna in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (3.10)
Requirement already satisfied: outcome in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (1.3.0.post0)
Requirement already satisfied: sniffio>=1.3.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio~=0.17->selenium) (1.3.1)
Requirement already satisfied: wsproto>=0.14 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from trio-websocket~=0.9->selenium) (1.2.0)
Requirement already satisfied: pysocks!=1.5.7,<2.0,>=1.5.6 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from urllib3[socks]<3,>=1.26->selenium) (1.7.1)
Requirement already satisfied: charset-normalizer<4,>=2 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from requests->webdriver-manager) (3.4.1)

Requirement already satisfied: h11<1,>=0.9.0 in /Users/pravarshaerodula/myenv/lib/python3.13/site-packages (from wsproto>=0.14->trio-websocket~=0.9->selenium) (0.14.0)

Note: you may need to restart the kernel to use updated packages.

Ending Cell 2------------------------------------------
Executing Cell 3---------------------------------------
Selenium and required packages are installed successfully!

Ending Cell 3------------------------------------------
Executing Cell 4---------------------------------------
Website loaded successfully!

Ending Cell 4------------------------------------------
Executing Cell 5---------------------------------------
Website loaded successfully!

Ending Cell 5------------------------------------------
Executing Cell 6---------------------------------------
Ending Cell 6------------------------------------------
Traceback (most recent call last):
  File "/Users/pravarshaerodula/myenv/bin/papermill", line 8, in <module>
    sys.exit(papermill())
             ~~~~~~~~~^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1161, in __call__
    return self.main(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1082, in main
    rv = self.invoke(ctx)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 1443, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/core.py", line 788, in invoke
    return __callback(*args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
    ~~~~~~~~~~~~~~~~^
        input_path=input_path,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<15 lines>...
        execution_timeout=execution_timeout,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/pravarshaerodula/myenv/lib/python3.13/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
ConnectionRefusedError                    Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:198, in HTTPConnection._new_conn(self)
    197 try:
--> 198     sock = connection.create_connection(
    199         (self._dns_host, self.port),
    200         self.timeout,
    201         source_address=self.source_address,
    202         socket_options=self.socket_options,
    203     )
    204 except socket.gaierror as e:

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:85, in create_connection(address, timeout, source_address, socket_options)
     84 try:
---> 85     raise err
     86 finally:
     87     # Break explicitly a reference cycle

File ~/myenv/lib/python3.13/site-packages/urllib3/util/connection.py:73, in create_connection(address, timeout, source_address, socket_options)
     72     sock.bind(source_address)
---> 73 sock.connect(sa)
     74 # Break explicitly a reference cycle

ConnectionRefusedError: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

NewConnectionError                        Traceback (most recent call last)
File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:787, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    786 # Make the request on the HTTPConnection object
--> 787 response = self._make_request(
    788     conn,
    789     method,
    790     url,
    791     timeout=timeout_obj,
    792     body=body,
    793     headers=headers,
    794     chunked=chunked,
    795     retries=retries,
    796     response_conn=response_conn,
    797     preload_content=preload_content,
    798     decode_content=decode_content,
    799     **response_kw,
    800 )
    802 # Everything went great!

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:493, in HTTPConnectionPool._make_request(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)
    492 try:
--> 493     conn.request(
    494         method,
    495         url,
    496         body=body,
    497         headers=headers,
    498         chunked=chunked,
    499         preload_content=preload_content,
    500         decode_content=decode_content,
    501         enforce_content_length=enforce_content_length,
    502     )
    504 # We are swallowing BrokenPipeError (errno.EPIPE) since the server is
    505 # legitimately able to close the connection after sending a valid response.
    506 # With this behaviour, the received response is still readable.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:445, in HTTPConnection.request(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)
    444     self.putheader(header, value)
--> 445 self.endheaders()
    447 # If we're given a body we start sending that in chunks.

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1333, in HTTPConnection.endheaders(self, message_body, encode_chunked)
   1332     raise CannotSendHeader()
-> 1333 self._send_output(message_body, encode_chunked=encode_chunked)

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1093, in HTTPConnection._send_output(self, message_body, encode_chunked)
   1092 del self._buffer[:]
-> 1093 self.send(msg)
   1095 if message_body is not None:
   1096 
   1097     # create a consistent interface to message_body

File /opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/http/client.py:1037, in HTTPConnection.send(self, data)
   1036 if self.auto_open:
-> 1037     self.connect()
   1038 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:276, in HTTPConnection.connect(self)
    275 def connect(self) -> None:
--> 276     self.sock = self._new_conn()
    277     if self._tunnel_host:
    278         # If we're tunneling it means we're connected to our proxy.

File ~/myenv/lib/python3.13/site-packages/urllib3/connection.py:213, in HTTPConnection._new_conn(self)
    212 except OSError as e:
--> 213     raise NewConnectionError(
    214         self, f"Failed to establish a new connection: {e}"
    215     ) from e
    217 sys.audit("http.client.connect", self, self.host, self.port)

NewConnectionError: <urllib3.connection.HTTPConnection object at 0x1082cad50>: Failed to establish a new connection: [Errno 61] Connection refused

The above exception was the direct cause of the following exception:

MaxRetryError                             Traceback (most recent call last)
Cell In[6], line 4
      1 from selenium.webdriver.common.by import By
      3 # Find all article links
----> 4 articles = driver.find_elements(By.TAG_NAME, "a")
      6 # Extract links that contain keywords
      7 keywords = ["fid", "rig"]

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:926, in WebDriver.find_elements(self, by, value)
    922     return self.execute_script(find_element_js, by.to_dict())
    924 # Return empty list if driver returns null
    925 # See https://github.com/SeleniumHQ/selenium/issues/4555
--> 926 return self.execute(Command.FIND_ELEMENTS, {"using": by, "value": value})["value"] or []

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:427, in WebDriver.execute(self, driver_command, params)
    424     elif "sessionId" not in params:
    425         params["sessionId"] = self.session_id
--> 427 response = self.command_executor.execute(driver_command, params)
    428 if response:
    429     self.error_handler.check_response(response)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404, in RemoteConnection.execute(self, command, params)
    402 trimmed = self._trim_large_entries(params)
    403 LOGGER.debug("%s %s %s", command_info[0], url, str(trimmed))
--> 404 return self._request(command_info[0], url, body=data)

File ~/myenv/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428, in RemoteConnection._request(self, method, url, body)
    425     body = None
    427 if self._client_config.keep_alive:
--> 428     response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)
    429     statuscode = response.status
    430 else:

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:143, in RequestMethods.request(self, method, url, body, fields, headers, json, **urlopen_kw)
    135     return self.request_encode_url(
    136         method,
    137         url,
   (...)
    140         **urlopen_kw,
    141     )
    142 else:
--> 143     return self.request_encode_body(
    144         method, url, fields=fields, headers=headers, **urlopen_kw
    145     )

File ~/myenv/lib/python3.13/site-packages/urllib3/_request_methods.py:278, in RequestMethods.request_encode_body(self, method, url, fields, headers, encode_multipart, multipart_boundary, **urlopen_kw)
    274     extra_kw["headers"].setdefault("Content-Type", content_type)
    276 extra_kw.update(urlopen_kw)
--> 278 return self.urlopen(method, url, **extra_kw)

File ~/myenv/lib/python3.13/site-packages/urllib3/poolmanager.py:443, in PoolManager.urlopen(self, method, url, redirect, **kw)
    441     response = conn.urlopen(method, url, **kw)
    442 else:
--> 443     response = conn.urlopen(method, u.request_uri, **kw)
    445 redirect_location = redirect and response.get_redirect_location()
    446 if not redirect_location:

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:871, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    866 if not conn:
    867     # Try again
    868     log.warning(
    869         "Retrying (%r) after connection broken by '%r': %s", retries, err, url
    870     )
--> 871     return self.urlopen(
    872         method,
    873         url,
    874         body,
    875         headers,
    876         retries,
    877         redirect,
    878         assert_same_host,
    879         timeout=timeout,
    880         pool_timeout=pool_timeout,
    881         release_conn=release_conn,
    882         chunked=chunked,
    883         body_pos=body_pos,
    884         preload_content=preload_content,
    885         decode_content=decode_content,
    886         **response_kw,
    887     )
    889 # Handle redirect?
    890 redirect_location = redirect and response.get_redirect_location()

File ~/myenv/lib/python3.13/site-packages/urllib3/connectionpool.py:841, in HTTPConnectionPool.urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)
    838 elif isinstance(new_e, (OSError, HTTPException)):
    839     new_e = ProtocolError("Connection aborted.", new_e)
--> 841 retries = retries.increment(
    842     method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]
    843 )
    844 retries.sleep()
    846 # Keep track of the error for the retry warning.

File ~/myenv/lib/python3.13/site-packages/urllib3/util/retry.py:519, in Retry.increment(self, method, url, response, error, _pool, _stacktrace)
    517 if new_retry.is_exhausted():
    518     reason = error or ResponseError(cause)
--> 519     raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
    521 log.debug("Incremented Retry for (url='%s'): %r", url, new_retry)
    523 return new_retry

MaxRetryError: HTTPConnectionPool(host='localhost', port=64464): Max retries exceeded with url: /session/04185e203e5cff023c21046f918f0fca/elements (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x1082cad50>: Failed to establish a new connection: [Errno 61] Connection refused'))

